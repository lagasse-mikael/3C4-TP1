<Application x:Class="TP1_Base_Prof.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TP1_Base_Prof"
             StartupUri="./Windows/ConnexionWindows.xaml">
    <Application.Resources>
        <ControlTemplate x:Key="WhiteButtonStyle" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="White" BorderThickness="3" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFF9A306"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFF9A306"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="DarkButtonStyle" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFF9A306"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFF9A306"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="PasswordBoxConnexion" TargetType="{x:Type PasswordBox}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <!--=========================================================================================================================================================================================-->
        <!--Style connexion window-->





        <Style x:Key="TextWhiteConnexion" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="roundTextBoxConnexion" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="125"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="BorderBrush" Value="White"/>


                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="passwordRoundTextBoxConnexion" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="125"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="3"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="ButtonStyleConnexion" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#23272a"/>
            <Setter Property="Padding" Value="10 10 10 10"/>
            <Setter Property="Template" Value="{DynamicResource WhiteButtonStyle}"/>
            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                    <Setter Property="BorderBrush" Value="White"/>




                </Style>
            </Style.Resources>

        </Style>

        <Style x:Key="DarkButtonConnexion" BasedOn="{StaticResource ButtonStyleConnexion}" TargetType="{x:Type Button}">

            <Setter Property="Template" Value="{DynamicResource DarkButtonStyleConnexion}"/>

            <Setter Property="Background" Value="#23272a"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <!--=========================================================================================================================================================================================-->
        <!--Style modifier-->


        <Style x:Key="ButtonStyleModif" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#23272a"/>
            <Setter Property="Padding" Value="10 10 10 10"/>
            <Setter Property="Width" Value="200"/>
            <!--<Setter Property="Template" Value="{DynamicResource BoutonEtudiantConnexion}"/>-->
            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                    <Setter Property="BorderBrush" Value="White"/>


                </Style>
            </Style.Resources>

        </Style>

        <Style x:Key="DarkButtonModif" BasedOn="{StaticResource ButtonStyleModif}" TargetType="{x:Type Button}">



            <Setter Property="Background" Value="#23272a"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>


        <!--=========================================================================================================================================================================================-->
        <!--Style horaire-->

        <Style x:Key="LabelTextWhiteHoraire" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="30"/>



        </Style>

        <Style x:Key="TextWhiteHoraire" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="31 10 10 10"/>
            <Setter Property="FontSize" Value="30"/>



        </Style>

        <Style x:Key="TextWhiteWeekDayHoraire" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="31 10 31 10"/>
            <Setter Property="FontSize" Value="25"/>



        </Style>

        <Style x:Key="roundTextBoxHoraire" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF181819"></Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="125"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                    <Setter Property="BorderBrush" Value="White"/>


                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="ButtonStyleHoraire" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#23272a"/>
            <Setter Property="Padding" Value="10 10 10 10"/>
            <Setter Property="Margin" Value="21"/>
            <Setter Property="Template" Value="{DynamicResource WhiteButtonStyleHoraire}"/>
            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                    <Setter Property="BorderBrush" Value="White"/>




                </Style>
            </Style.Resources>

        </Style>

        <Style x:Key="DarkButtonHoraire" BasedOn="{StaticResource ButtonStyleHoraire}" TargetType="{x:Type Button}">

            <Setter Property="Template" Value="{DynamicResource DarkButtonStyleHoraire}"/>

            <Setter Property="Background" Value="#23272a"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>


        <Style x:Key="ComboBoxParamHoraire" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Width" Value="61"/>





        </Style>


        <!--=========================================================================================================================================================================================-->
        <!--Mod/Student/Teacher-->


        <Style x:Key="TextWhiteMod" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="28"/>
        </Style>

        <Style x:Key="roundTextBoxMod" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="25"/>
                    <Setter Property="BorderBrush" Value="White"/>


                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="ListViewMod" TargetType="{x:Type ListView}">
            <Setter Property="Height" Value="275"/>
            <Setter Property="Width" Value="535"/>
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Margin" Value=" 30 21 0 0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>



        <!--=========================================================================================================================================================================================-->
        <!--Add/Student/Teacher-->

        <Style x:Key="LabelTextWhiteAdd" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="25"/>



        </Style>

        <Style x:Key="TextWhiteAdd" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="20"/>
            
        </Style>

        <Style x:Key="roundTextBoxAdd" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            


            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="25"/>
                    <Setter Property="BorderBrush" Value="White"/>


                </Style>
            </Style.Resources>
        </Style>
        
        <!--=========================================================================================================================================================================================-->
        <!--Note Windows-->

        <Style x:Key="ButtonStyleNote" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#23272a"/>
            <Setter Property="Padding" Value="10 10 10 10"/>
            <Setter Property="Template" Value="{DynamicResource WhiteButtonStyle}"/>
            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="61"/>
                    <Setter Property="BorderBrush" Value="White"/>




                </Style>
            </Style.Resources>

        </Style>


        <Style x:Key="ListViewNote" TargetType="{x:Type ListView}">
         
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Margin" Value="10 10 10 0"/>
            <Setter Property="Foreground" Value="White"/>
            
        </Style>

        <Style x:Key="ListViewNote2" TargetType="{x:Type ListView}">
            <Setter Property="Height" Value="150"/>
            <Setter Property="Width" Value="551"/>
            <Setter Property="Background" Value="#FF181819"/>
            <Setter Property="Margin" Value="10 10 10 0"/>
            <Setter Property="Background" Value="#23272a"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

        </Style>


        <!--=========================================================================================================================================================================================-->
        <!--Omnivox Windows-->


        <Style x:Key="ButtonStyleOmnivox" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="#23272a"/>
            <Setter Property="Padding" Value="10 10 10 10"/>
            <Setter Property="Template" Value="{DynamicResource WhiteButtonStyle}"/>
            <Style.Resources >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="20"/>
                    <Setter Property="BorderBrush" Value="White"/>




                </Style>
            </Style.Resources>

        </Style>

        <Style x:Key="ButtonStyleOmnivoxBlue" BasedOn="{StaticResource ButtonStyleOmnivox}" TargetType="{x:Type Button}">

            

            <Setter Property="Background" Value="#23272a"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>

        <Style x:Key="LabelTextOrange" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="DarkOrange"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="25"/>



        </Style>

    </Application.Resources>
</Application>
